
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Admin check relies on custom claims. Without these, it will fail for most operations.
    function isAdmin() {
      // Ensure request.auth.token exists before trying to access .role
      return isAuthenticated() && hasattr(request.auth.token, 'role') && request.auth.token.role == 'admin';
    }

    function isUser() {
      // Ensure request.auth.token exists before trying to access .role
      return isAuthenticated() && hasattr(request.auth.token, 'role') && request.auth.token.role == 'user';
    }
    
    function isUserOrAdmin() {
      return isUser() || isAdmin();
    }

    match /clients/{clientId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    match /products/{productId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    match /providers/{providerId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    match /users/{userId} {
      allow read: if isAdmin() || (isAuthenticated() && isOwner(userId));
      // Allow authenticated user to create their own document (for signup) OR admin to create any user.
      allow create: if (isAuthenticated() && isOwner(userId)) || isAdmin();
      allow update: if isAdmin() || (isAuthenticated() && isOwner(userId));
      allow delete: if isAdmin(); // Only admin can delete users.
    }

    match /serviceOrders/{orderId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    match /sales/{saleId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    match /systemSettings/establishmentDetails {
      // For development: allow any authenticated user to read/write.
      // For production: change to 'if isUserOrAdmin();' AND ensure custom claims are set.
      allow read, write: if isAuthenticated();
    }

    match /expenses/{expenseId} {
      // Allow authenticated users with a role (admin or user) to manage expenses.
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // Default deny all other paths - good practice
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
