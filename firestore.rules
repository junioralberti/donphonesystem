
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is an admin
    // Assumes a custom claim 'role' is set on the auth token
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }

    // Helper function to check if user is a standard user or admin
    // Assumes a custom claim 'role' is set on the auth token
    function isUserOrAdmin() {
      return isAuthenticated() && (request.auth.token.role == 'user' || request.auth.token.role == 'admin');
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(docUserId) {
      return request.auth.uid == docUserId;
    }

    // Clients Collection
    match /clients/{clientId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // Products Collection
    match /products/{productId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // Providers Collection
    match /providers/{providerId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isAdmin() || (isAuthenticated() && isOwner(userId));
      // MODIFIED: Allow authenticated users to create their own user document.
      // This is necessary for the self-registration flow to work.
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isAdmin() || (isAuthenticated() && isOwner(userId));
      allow delete: if isAdmin();
    }

    // Service Orders Collection
    match /serviceOrders/{orderId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // Sales Collection
    match /sales/{saleId} {
      allow read, create, update, delete: if isUserOrAdmin();
    }

    // System Settings (Establishment Details)
    match /systemSettings/establishmentDetails {
      allow read, write: if isUserOrAdmin();
    }

    // Default deny all other paths - good practice
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
