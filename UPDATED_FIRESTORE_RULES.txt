
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }
    
    // Helper function to check if the user is the owner of the document
    // (assumes document has a 'userId' field)
    function isOwner(docUserId) {
      return isAuthenticated() && request.auth.uid == docUserId;
    }

    // Helper function for create operations (resource.data does not exist yet)
    function isCreatingOwner() {
      return isAuthenticated() && request.auth.uid == request.resource.data.userId;
    }
    
    // Users Collection (Remains mostly as is, but clarify ownership)
    match /users/{userId} {
      allow read: if isAdmin() || (isAuthenticated() && request.auth.uid == userId); // User can read their own profile
      allow create: if isAdmin(); // Only admins can create new user entries (Auth handles user self-signup)
      allow update: if isAdmin() || (isAuthenticated() && request.auth.uid == userId); // User can update their own profile
      allow delete: if isAdmin(); // Only admins can delete user entries
    }

    // Clients Collection
    match /clients/{clientId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAdmin() || isCreatingOwner();
    }

    // Products Collection
    match /products/{productId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAdmin() || isCreatingOwner();
    }

    // Providers Collection
    match /providers/{providerId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAdmin() || isCreatingOwner();
    }

    // Service Orders Collection
    match /serviceOrders/{orderId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAdmin() || isCreatingOwner();
    }

    // Sales Collection
    match /sales/{saleId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId); // update might be for cancellation
      allow create: if isAdmin() || isCreatingOwner();
    }
    
    // Expenses Collection
    match /expenses/{expenseId} {
      allow read, update, delete: if isAdmin() || isOwner(resource.data.userId);
      allow create: if isAdmin() || isCreatingOwner();
    }

    // System Settings (Establishment Details) - Remains global, managed by admin/user
    match /systemSettings/establishmentDetails {
       allow read, write: if isAuthenticated() && (request.auth.token.role == 'admin' || request.auth.token.role == 'user');
    }

    // Default deny all other paths
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
